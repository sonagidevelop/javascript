/*
let js = "amazing";
console.log(40 + 8 + 23 - 10);

console.log("Jonas");
console.log(23);

let firstName = "Matilda";

console.log(firstName);
console.log(firstName);
console.log(firstName);

// Variable name conventions
let jonas_matilda = "jm";
let $function = 27;

let person = "jonas";
let PI = 3.1415;

let myFirstJob = "Coder";
let myCurrentJob = "Teacher";

let job1 = "programmer";
let job2 = "teacher";

console.log(myFirstJob);
*/

/*var job = 'programmer';
job = 'teacher';

console.log(job);
*/

//Coding Challenge #1
/*
let markMass = 95;
let markHeight = 1.88;
let johnMass = 85;
let johnHeight = 1.76;

let markBMI = markMass / markHeight ** 2;
let johnBMI = johnMass / johnHeight ** 2;

let markHigherBMI = (markBMI > johnBMI);
console.log(markHigherBMI);
*/

/*
//Driver's license approval system
let userAge = 17;
let licenseAge = 20;
let differenceAge = userAge - licenseAge;

if (differenceAge >= 0) {
    console.log("You can try driver's license!")
} else {
    console.log(`you have ${differenceAge * -1}years left for driver's license.`)
}
*/
/*
//Coding Challenge #2
let markMass = 95;
let markHeight = 1.88;
let johnMass = 85;
let johnHeight = 1.76;

let markBMI = markMass / markHeight ** 2;
let johnBMI = johnMass / johnHeight ** 2;
let markBMIFixed = markBMI.toFixed(1);
let johnBMIFixed = johnBMI.toFixed(1);

let markHigherBMI = (markBMI > johnBMI);

if (markHigherBMI) {
    console.log(`Mark's BMI(${markBMIFixed}) is higher than John's(${johnBMIFixed})!!`)
} else {
    console.log(`John's BMI(${johnBMIFixed}) is higher than Mark's(${markBMIFixed})!!`)
}
*/
/*
'use strict';

let hasDriversLicense = false;
const passTest = true;

if (passTest) hasDriversLicense = true;
if (hasDriversLicense) console.log("i can drive:D");
*/

/*
function logger() {
    console.log("My name is Jonas");
}



function fruitProcessor(apples, oranges) {
    console.log(apples, oranges);
    const juice = `Juice with ${apples} apples and ${oranges} oranges.`;
    return juice
}

let juiceCount = fruitProcessor(5, 0);
console.log(juiceCount);

const num = Number('23');
console.log(typeof '23');
console.log(typeof Number('23'));
*/
/*
function calcAge1(birthYear) {
    return 2037 - birthYear;
}

const age1 = calcAge1(1991);
console.log(age1);

const calcAge2 = function (birthYear) {
    return 2037 - birthYear;
}
const age2 = calcAge2(1991);
console.log(age2);
*/
/*
const calcAge3 = birthYear => 2037 - birthYear;
const age3 = calcAge3(1991);
console.log(age3);
*/
/*const yearsuntilRetire = (birthYear, firstName) => {
    const age = 2020 - birthYear
    const retire = 65 - age;
    return `${firstName} retires in ${retire}years.`;
}

console.log(yearsuntilRetire(1998, 'jin'));
*/
/*
function cutFruitPieces(fruit) {
    return fruit * 4;
}



function fruitProcessor(apples, oranges) {
    const applePieces = cutFruitPieces(apples);
    const orangePieces = cutFruitPieces(oranges);

    console.log(apples, oranges);
    const juice = `Juice with ${applePieces} apples and ${orangePieces} oranges.`;
    return juice
}

console.log(fruitProcessor(2, 3));
*/

//Coding Challenge 2-1
/*
const calcAverage = (sc1, sc2, sc3) => (sc1 + sc2 + sc3) / 3;

const dolphinScore = calcAverage(85, 54, 41);
const koalaScore = calcAverage(23, 34, 27);

function checkWinner(avgDolphins, avgKoalas) {
    let winner;
    let winnerAvg;
    let loserAvg;
    if (avgDolphins >= avgKoalas * 2) {
        winner = "dolphins";
        winnerAvg = avgDolphins;
        loserAvg = avgKoalas;
        console.log(`${winner} win (${winnerAvg} vs. ${loserAvg})`);

    } else if (avgKoalas >= avgDolphins * 2) {
        winner = "koalas";
        winnerAvg = avgKoalas;
        loserAvg = avgDolphins;
        console.log(`${winner} win (${winnerAvg} vs. ${loserAvg})`);
    } else {
        console.log("nobody won!");
    }

}

checkWinner(dolphinScore, koalaScore);
*/
/*
const friends = ['Michael', 'Steven', 'Peter'];

friends[2] = 'Jay';
console.log(friends);

const jonas = ['schmedtmann', 2037 - 1991, 'teacher', friends];
console.log(jonas);

const calcAge = function (birthYear) {
    return 2037 - birthYear;
}

const years = [1990, 1967, 2002, 2010, 2018];
console.log(years);


const age1 = calcAge(years[0]);
console.log(age1);

const age2 = calcAge(years[1]);
console.log(age2);

const age3 = calcAge(years[4]);
console.log(age3);

const ages = [calcAge(years[0]), calcAge(years[1]), calcAge(years[4])];
console.log(ages);

const newYears = [];
for (i = 0; i < years.length; i++) {
    newYears[i] = calcAge(years[i]);
}

console.log(newYears);
*/
/*
const friends = ['Michael', 'Steven', 'Peter'];
const newFriends = friends.push('jay');
console.log(friends);
console.log(newFriends);

friends.unshift('john');
console.log(friends);

//removing

const poppedFreind = friends.pop();
console.log(friends);
console.log(poppedFreind);
const shiftedFriend = friends.shift();
console.log(shiftedFriend)

console.log(friends.indexOf('Steven'));
*/
/*
//cc2-2
const bills = [125, 555, 44];

function calcTip(billValue) {
    let tipValue;
    if (billValue >= 50 && billValue <= 300) {
        tipValue = billValue * 0.15;
        return tipValue;
    } else {
        tipValue = billValue * 0.2;
        return tipValue;
    }
}

let tips = [calcTip(bills[0]), calcTip(bills[1]), calcTip(bills[2])];
let total = [bills[0] + tips[0], bills[1] + tips[1], bills[2] + tips[2]];
console.log(tips);
console.log(total);

const calcTip = function (billValue) {
    return billValue >= 50 && billValue <= 300 ? bill * 0.15 : bill * 0.2;
}

*/
/*
const jin = {
    firstName: 'jin hyeok',
    lastName: 'Choi',
    age: 2020 - 1998,
    job: 'Soldier',
    friends: ['a', 'b', 'c']
};
*/
/*
console.log(jin);

console.log(jin.lastName);
console.log(jin['lastName']);

const nameKey = 'Name';
console.log(jin['first' + nameKey]);
console.log(jin['last' + nameKey]);
*/
/*
function loggingInterested() {
    const interestedIn = prompt('What do you want to know about jin? choose between firstName,...');
    if (jin[interestedIn]) {
        console.log(jin[interestedIn]);
    } else {
        console.log("wrong input!");
    }
}

loggingInterested();
*/
/*
jin.location = "Republic of Korea";
jin["github"] = "sonagideveloper";
console.log(jin);
*/
/*
jin.bestfriend = "michael";
const jinFriendCount = jin["friends"].length;
console.log(`Jin has ${jinFriendCount} friends, and his best friend is called ${jin["bestfriend"]}"`);*/
/*
const jin = {
    firstName: 'jin hyeok',
    lastName: 'Choi',
    birthYear: 1998,
    job: 'Soldier',
    friends: ['Michael', 'Peter', 'Steven'],
    hasDriversLicense: false,

    //calcAge: function (birthYear) {
    //    return 2020 - birthYear;
    //}

    //calcAge: function () {
    //    console.log(this);
    //    return 2020 - this.birthYear;
    //}

    calcAge: function () {
        this.age = 2020 - this.birthYear;
        return this.age;
    },

    getSummary: function () {
        return `${this.firstName} is a ${this.calcAge()}-year old ${this.job}. and he has ${this.hasDriversLicense ? 'a' : 'no'} driver's license.`
    }
};

console.log(jin.getSummary());
*/
/*
//Coding Challenge 2-3
const markProfile = {
    firstName: "Mark",
    lastName: "Miller",
    mass: 78,
    height: 1.69,
    calcBMI: function () {
        this.bmi = (this.mass / this.height ** 2);
        return this.bmi;
    }
};
const johnProfile = {
    firstName: "John",
    lastName: "Smith",
    mass: 92,
    height: 1.95,
    calcBMI: function () {
        this.bmi = (this.mass / this.height ** 2);
        return this.bmi;

    }
};

if (markProfile.calcBMI() > johnProfile.calcBMI()) {
    console.log(`${markProfile.firstName}'s BMI(${markProfile.calcBMI()}) is higher than ${johnProfile.firstName}'s(${johnProfile.calcBMI()})!`);
} else {
    console.log(`${johnProfile.firstName}'s BMI(${johnProfile.calcBMI()}) is higher than ${markProfile.firstName}'s(${markProfile.calcBMI()})!`);
}*/
/*
//for loop keeps running while condition is true
for (let rep = 1; rep <= 10; rep++) {
    console.log(`lifting weights repetition ${rep}`)
}
*/

/*
const jonasArray = [
    'Jonas',
    'Schmedtmann',
    2037 - 1991,
    'teacher',
    ['Michael', 'Peter', 'Steven']
];

for (i = 0; i < jonasArray.length; i++) {
    console.log(jonasArray[i], typeof jonasArray[i]);
}

const typeArray = [];
for (i = 0; i < jonasArray.length; i++) {
    typeArray.push(typeof jonasArray[i]);
}
console.log(typeArray);

const years = [1991, 2007, 1969, 2019];
const ages = [];

for (i = 0; i < years.length; i++) {
    ages.push(2020 - years[i]);
}
console.log(ages);
*/
// continue and break
/*
for (i = 0; i < jonasArray.length; i++) {
    if (typeof jonasArray[i] !== "string") continue;
    typeArray.push(jonasArray[i]);

}
console.log(typeArray);
*/
/*
for (i = 0; i < jonasArray.length; i++) {
    typeArray.push(jonasArray[i]);

    if (typeof jonasArray[i] === "number")
        break;

}
console.log(typeArray);
*/
/*
for (i = jonasArray.length - 1; i >= 0; i--) {
    console.log(i, jonasArray[i]);
}
*/
/*
const typeLift = ['a', 'b', 'c'];
for (i = 0; i < typeLift.length; i++) {
    for (j = 0; j < 5; j++) {
        console.log(`${typeLift[i]}를 ${j + 1}번 했음.`);
    }
}

for (i = 0; i < typeLift.length; i++) {
    console.log(`${typeLift[i]}운동중--------------------------------`)

    for (j = 0; j < 5; j++) {
        console.log(`${j + 1}번 했음.`);
    }
}
*/
/*
for (let rep = 1; rep <= 10; rep++) {
    console.log(`lifting weights repetition ${rep}`)
}
let rep = 1;
while (rep <= 10) {
    console.log(`lifting weights repetition ${rep}`);
    rep++;
}
*/
/*
let dice = Math.trunc(Math.random() * 6) + 1;
//console.log(dice);

while (dice !== 6) {
    dice = Math.trunc(Math.random() * 6) + 1;
    console.log(`you rolled ${dice}`);
}

*/

const bills = [22, 295, 176, 440, 37, 105, 10, 1100, 86, 52];
const tips = [];
const totals = [];
function calcTip(billValue) {
    billValue >= 50 && billValue <= 300 ? this.tip = billValue * 0.15 : this.tip = billValue * 0.2;
    return tip;
}
for (i = 0; i < bills.length; i++) {
    tips.push(calcTip(bills[i]));
}

for (i = 0; i < bills.length; i++) {
    totals.push(bills[i] + tips[i]);
}
console.log(totals);

function calcAverage(arr) {
    let addField = 0;
    for (i = 0; i < arr.length; i++) {
        addField = addField + arr[i];

    }
    this.average = addField / arr.length;
    return average
}

const billAverage = calcAverage(bills);
console.log(billAverage);
const totalAverage = calcAverage(totals);
console.log(totalAverage);  
